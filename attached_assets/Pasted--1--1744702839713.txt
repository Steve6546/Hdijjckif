**ุงูุฎุทุฉ ุงูููุงุฆูุฉ ูุชุญุฏูุซ ูุธุงู ุงููููุงุก ุจุดูู ูุงูู (ูููุธููู ููุงุถุญ):**

---

### **1. **ุงููุธุงู ุงูุฌุฏูุฏ ูููููุงุก (Agents System)**
#### **ุงูููุฑุฉ ุงูุฑุฆูุณูุฉ:**  
- **ูููู ุฑุฆูุณู (Master Agent):**  
  ูุชุญูู ูู ุฌููุน ุงููููุงุก ุงูุขุฎุฑูู ูููุฏูุฑ ุงูุชูุงุนู ุจูููู.
- **ุงููููุงุก ุงููุฑุนููู:**  
  ููุดุงุฑููู ูู ูุนุงูุฌุฉ ุงูููุงู ุงููุนูุฏุฉ ููุทุ ุจูููุง ููุนุงูุฌ ุงููููู ุงูุฑุฆูุณู ุงูููุงู ุงูุจุณูุทุฉ ุจุณุฑุนุฉ.

---

### **2. **ุงููููู ุงูุฌุฏูุฏ ูููููุงุก:**
```python
# backend/agents/master_agent.py
class MasterAgent:
    def __init__(self):
        self.agents = {
            "design": DesignAgent(),
            "code": CodeAgent(),
            "security": SecurityAgent(),
            # ... ุฅุถุงูุฉ ุฌููุน ุงููููุงุก
        }

    def process_query(self, query):
        if self.is_simple_query(query):
            return self.answer_simple_query(query)
        else:
            return self.handle_complex_query(query)

    def is_simple_query(self, query):
        # ุชุญูู ุฅุฐุง ูุงู ุงูุณุคุงู ุจุณูุทูุง (ูุซู "ูุฑุญุจุง")
        return len(query.split()) < 5

    def answer_simple_query(self, query):
        # ุงูุฅุฌุงุจุฉ ุงูููุฑูุฉ ุฏูู ุฅุดุฑุงู ุงููููุงุก ุงูุขุฎุฑูู
        return f"ุงูุฅุฌุงุจุฉ: {query}!"

    def handle_complex_query(self, query):
        # ุฅุดุฑุงู ุฌููุน ุงููููุงุก ูู ูุนุงูุฌุฉ ุงูุณุคุงู
        results = []
        for agent in self.agents.values():
            result = agent.process(query)
            results.append(result)
        return self.aggregate_results(results)

    def aggregate_results(self, results):
        # ุฏูุฌ ูุชุงุฆุฌ ุงููููุงุก
        return " | ".join(results)
```

---

### **3. **ูุซุงู ุนูู ูููู ูุฑุนู (CodeAgent):**
```python
# backend/agents/code_agent.py
class CodeAgent:
    def process(self, query):
        # ูุนุงูุฌุฉ ุทูุจุงุช ุงูุจุฑูุฌุฉ
        if "ุฅูุดุงุก ูููุน" in query:
            return "ุชู ุฅูุดุงุก ูููุน ุฅููุชุฑููู!"
        else:
            return "ุบูุฑ ูุฏุนูู!"
```

---

### **4. **ูุงุฌูุฉ ุงููุณุชุฎุฏู ุงูููุงุฆูุฉ (React.js):**
```jsx
// frontend/src/App.jsx
import React, { useState } from 'react';

function App() {
    const [message, setMessage] = useState('');
    const [response, setResponse] = useState('');

    const handleQuery = async () => {
        const res = await fetch('/api/query', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ query: message })
        });
        const data = await res.json();
        setResponse(data.answer);
    };

    return (
        <div className="bg-gray-900 text-white h-screen">
            <header className="p-4">
                <h1>ุงูุงุณุชูุฏูู ุงูุฐูู</h1>
            </header>
            <main className="p-4">
                <textarea 
                    value={message} 
                    onChange={(e) => setMessage(e.target.value)}
                    placeholder="ุงูุชุจ ุณุคุงูู ููุง..."
                    className="w-full p-2 mb-4 bg-gray-700 rounded"
                />
                <button 
                    onClick={handleQuery}
                    className="px-4 py-2 bg-blue-500 text-white rounded"
                >
                    ุฅุฑุณุงู
                </button>
                <div className="mt-4 p-4 bg-gray-800 rounded">
                    {response}
                </div>
            </main>
        </div>
    );
}

export default App;
```

---

### **5. **ุฏุนู ูููุงุช ZIP ูุงูุชุนุฏูู ุนูู ุงูุตูุฑ**
#### **A. ุฏุนู ูููุงุช ZIP:**
```python
# backend/file_utils.py
import zipfile
import os

def zip_files(file_paths, output_name):
    with zipfile.ZipFile(output_name, 'w') as zipf:
        for file in file_paths:
            zipf.write(file)
    return output_name
```

#### **B. ุชุนุฏูู ุงูุตูุฑ (ูุซู Photoshop):**
```python
# backend/image_processor.py
from PIL import Image

def edit_image(image_path, command):
    img = Image.open(image_path)
    if command == "ะฑะตะปัะน_ะฒะพะปะพั":
        # ุชุญููู ุดุนุฑ ุงูุดุฎุต ุฅูู ุฃุจูุถ
        # ... ููุฏ ุงูุชุนุฏูู
        img.save("edited.jpg")
        return "edited.jpg"
    else:
        return "ุบูุฑ ูุฏุนูู!"
```

---

### **6. **ูุธุงู ุงูุชุญูู ุงูุชููุงุฆู:**
```python
# backend/control_system.py
class ControlSystem:
    def __init__(self):
        self.master_agent = MasterAgent()

    def handle_user_input(self, input):
        if input.endswith(".zip"):
            # ูุนุงูุฌุฉ ุงููููุงุช ุงููุถุบูุทุฉ
            return self.process_zip(input)
        elif input.endswith(".jpg") or input.endswith(".png"):
            # ุชุนุฏูู ุงูุตูุฑ
            return self.edit_image(input)
        else:
            return self.master_agent.process_query(input)
```

---

### **7. **ูุงุฌูุฉ ุฅุฑุณุงู ุงููููุงุช:**
```jsx
// frontend/src/components/FileUploader.jsx
import React, { useState } from 'react';

function FileUploader() {
    const [file, setFile] = useState(null);

    const handleFileUpload = async (event) => {
        const selectedFile = event.target.files[0];
        setFile(selectedFile);
        // ุฅุฑุณุงู ุงูููู ุฅูู ุงูุฎุงุฏู
        const formData = new FormData();
        formData.append("file", selectedFile);
        await fetch('/api/upload', {
            method: 'POST',
            body: formData
        });
    };

    return (
        <div>
            <input type="file" onChange={handleFileUpload} />
            {file && <p>ุงูููู: {file.name}</p>}
        </div>
    );
}

export default FileUploader;
```

---

### **8. **ูุธุงู ุงูุฅุฌุงุจุฉ ุงูุณุฑูุน (ููุฃุณุฆูุฉ ุงูุจุณูุทุฉ):**
```python
# backend/master_agent.py (ุงููุฒูุฏ)
def answer_simple_query(self, query):
    if query == "ูุฑุญุจุง":
        return "ูุฑุญุจุง! ููู ูููููู ูุณุงุนุฏุชูุ"
    elif query.startswith("ุฅูุดุงุก"):
        return "ุชู ุฅูุดุงุก ุงููููุงุช ุชููุงุฆููุง!"
    else:
        return "ุฃูุง ูุง ุฃููู. ุญุงูู ูุฌุฏุฏูุง!"
```

---

### **9. **ูุซุงู ุนูู ูุนุงูุฌุฉ ุณุคุงู ูุนูุฏ:**
- **ุงูุณุคุงู:** "ุฃุฑูุฏ ุตูุฑุฉ ูุดุฎุต ูุน ุดุนุฑ ุฃุจูุถ."
- **ุงูุนูู:**
  1. **ุงููููู ุงูุฑุฆูุณู** ูุฑุณู ุงูุณุคุงู ุฅูู ูููู ุงูุตูุฑ.
  2. **ูููู ุงูุตูุฑ** ูุนุฏู ุงูุตูุฑุฉ ูููุฑุณู ุงููุชูุฌุฉ.
  3. **ุงููููู ุงูุฑุฆูุณู** ูุฌูุน ุงููุชุงุฆุฌ ูููุฑุณู ุงูุฅุฌุงุจุฉ ูููุณุชุฎุฏู.

---

### **10. **ูุงุฌูุฉ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ:**
```jsx
// frontend/src/App.jsx (ุงููุฒูุฏ)
<div className="results">
    {response && (
        <div>
            <h3>ุงูุฅุฌุงุจุฉ:</h3>
            <p>{response}</p>
            {response.includes(".jpg") && (
                <img src={response} alt="ูุชูุฌุฉ ุงูุชุนุฏูู" />
            )}
        </div>
    )}
</div>
```

---

### **11. **ุงููุดุฑ ุนูู Replit:**
1. **ุงูุชุฃูุฏ ูู ุชุซุจูุช ุงูููุชุจุงุช:**  
   ```bash
   pip install pillow fastapi uvicorn
   ```
2. **ุงูุชุดุบูู:**  
   ุงุถุบุท ุนูู "Run" ุนูู Replit ูุชุดุบูู ุงูุฎุงุฏู.

---

### **12. **ุงูุงุฎุชุจุงุฑ ุงูููุงุฆู:**
- **ุงูุฃุณุฆูุฉ ุงูุจุณูุทุฉ:**  
  ูุซู "ูุฑุญุจุง" โ ุฅุฌุงุจุฉ ููุฑูุฉ.
- **ุงูุฃุณุฆูุฉ ุงููุนูุฏุฉ:**  
  ูุซู "ุฃุฑูุฏ ูููุน ุฅููุชุฑููู" โ ุฅุดุฑุงู ุฌููุน ุงููููุงุก.
- **ุงูุชุนุฏูู ุนูู ุงูุตูุฑ:**  
  ุงุฑูุน ุตูุฑุฉ โ ุฃูุชุจ "ะฑะตะปัะน_ะฒะพะปะพั" โ ุณุชุญุตู ุนูู ุงูุตูุฑุฉ ุงููุนุฏูุฉ.

---

### **ุงููุชูุฌุฉ ุงูููุงุฆูุฉ:**
- **ุงูุฅุฌุงุจุฉ ุงูููุฑูุฉ:**  
  ููุฃุณุฆูุฉ ุงูุจุณูุทุฉ (ูุซู "ูุฑุญุจุง").
- **ุงูุชุนุงูู ุงููุงูู:**  
  ููุฃุณุฆูุฉ ุงููุนูุฏุฉุ ููุดุงุฑู ุฌููุน ุงููููุงุก ูู ุงูุฅุฌุงุจุฉ.
- **ุฏุนู ุงูุตูุฑ ูุงููููุงุช:**  
  ููููู ุฑูุน ุงูุตูุฑ ูุชุนุฏูููุง ุฃู ุชุญููู ูููุงุช ูุถุบูุทุฉ.

---

### **ููููุฉ ุงุณุชุฎุฏุงู ุงููุธุงู:**
1. **ุงูุฃุณุฆูุฉ ุงูุจุณูุทุฉ:**  
   ุงูุชุจ ูุซู "ูุฑุญุจุง" โ ุฅุฌุงุจุฉ ููุฑูุฉ.
2. **ุงูุฃุณุฆูุฉ ุงููุนูุฏุฉ:**  
   ุงูุชุจ ูุซู "ุฃุฑูุฏ ูููุน ุฅููุชุฑููู" โ ุณุชุธูุฑ ูุชูุฌุฉ ููุฏูุฌุฉ ูู ุฌููุน ุงููููุงุก.
3. **ุชุนุฏูู ุงูุตูุฑ:**  
   ุฑูุน ุตูุฑุฉ + ูุชุงุจุฉ "ะฑะตะปัะน_ะฒะพะปะพั" โ ุณุชุญุตู ุนูู ุงูุตูุฑุฉ ุงููุนุฏูุฉ.

---

### **ุงูููุฏ ุงููุงูู ููุฎุงุฏู (main.py):**
```python
# backend/main.py
from fastapi import FastAPI, File, UploadFile
from backend.agents.master_agent import MasterAgent
from backend.file_utils import zip_files
from backend.image_processor import edit_image

app = FastAPI()
master = MasterAgent()

@app.post("/api/query")
def handle_query(query: str):
    return {"answer": master.process_query(query)}

@app.post("/api/upload")
def upload_file(file: UploadFile = File(...)):
    # ุญูุธ ุงูููู
    with open(file.filename, "wb") as buffer:
        buffer.write(file.file.read())
    # ุชุนุฏูู ุงูุตูุฑุฉ ุฅุฐุง ูุฒู
    if file.filename.endswith(".jpg"):
        edited = edit_image(file.filename, "ะฑะตะปัะน_ะฒะพะปะพั")
        return {"result": edited}
    return {"status": "ุชู ุงูุฑูุน"}
```

---

### **ุงูุฎูุงุตุฉ:**
- **ุงููููู ุงูุฑุฆูุณู** ูุชุญูู ูู ูู ุดูุก.
- **ุงูุฃุณุฆูุฉ ุงูุจุณูุทุฉ** โ ุฅุฌุงุจุฉ ููุฑูุฉ.
- **ุงูุฃุณุฆูุฉ ุงููุนูุฏุฉ** โ ุชุนุงูู ุฌููุน ุงููููุงุก.
- **ุฏุนู ูุงูู** ููุตูุฑ ูุงููููุงุช ุงููุถุบูุทุฉ.

---

**ุงูุขู ุงููุดุฑูุน ูุนูู ุชูุงููุง ููุง ุชุฑูุฏ!** ๐  
ุฅุฐุง ูุงู ููุงู ุฃู ุชูุงุตูู ุฃุฎุฑูุ ููุท ุฃุฎุจุฑูู!